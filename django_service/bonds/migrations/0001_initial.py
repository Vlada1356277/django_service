# Generated by Django 5.0.4 on 2024-05-28 11:35

from django.db import migrations, models

# def create_permissions_and_groups(apps, schema_editor):
#     Permission = apps.get_model('auth', 'Permission')
#     Group = apps.get_model('auth', 'Group')
#     ContentType = apps.get_model('contenttypes', 'ContentType')
#     Users = apps.get_model('bonds', 'Users')
#
#     # Получаем content_type для модели Device
#     content_type = ContentType.objects.get_for_model(Users)
#
#     # Создаем право доступа
#     permission = Permission.objects.create(
#         codename='view_all_devices',
#         name='Can view all devices',
#         content_type=content_type,
#     )
#
#     # Создаем группу и добавляем в нее право доступа
#     group, created = Group.objects.get_or_create(name='DeviceViewers')
#     group.permissions.add(permission)
#
#     # Назначаем право доступа всем суперпользователям
#     for user in Users.objects.filter(is_superuser=True):
#         user.user_permissions.add(permission)
#

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [

        migrations.CreateModel(
            name='Device',
            fields=[
                ('serial_number', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('esiaId', models.CharField(default='', max_length=40)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('devices', models.ManyToManyField(related_name='users', to='bonds.device')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
